// Code generated by goctl. DO NOT EDIT.
// Source: user_server.proto

package permissions

import (
	"context"

	"user_server/user_server"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BoolRespVo                 = user_server.BoolRespVo
	CreatePermissionReqVo      = user_server.CreatePermissionReqVo
	CreateRoleReqVo            = user_server.CreateRoleReqVo
	CreateUserReqVo            = user_server.CreateUserReqVo
	Empty                      = user_server.Empty
	JwtTokenRespVo             = user_server.JwtTokenRespVo
	PermissionIdReqVo          = user_server.PermissionIdReqVo
	PermissionInfoRespVo       = user_server.PermissionInfoRespVo
	PermissionNameReqVo        = user_server.PermissionNameReqVo
	PermissionRolesRespVo      = user_server.PermissionRolesRespVo
	RoleIdPermissionIdReqVo    = user_server.RoleIdPermissionIdReqVo
	RoleIdReqVo                = user_server.RoleIdReqVo
	RoleInfoListRespVo         = user_server.RoleInfoListRespVo
	RoleInfoRespVo             = user_server.RoleInfoRespVo
	RolePermissionReqVo        = user_server.RolePermissionReqVo
	RolePermissionRespVo       = user_server.RolePermissionRespVo
	RolePermissionsRespVo      = user_server.RolePermissionsRespVo
	RoleUsersRespVo            = user_server.RoleUsersRespVo
	UpdateUserReqVo            = user_server.UpdateUserReqVo
	UserIdReqVo                = user_server.UserIdReqVo
	UserInfoRespVo             = user_server.UserInfoRespVo
	UserRoleReqVo              = user_server.UserRoleReqVo
	UserRoleRespVo             = user_server.UserRoleRespVo
	UserRolesRespVo            = user_server.UserRolesRespVo
	UserTokenPermissionIdReqVo = user_server.UserTokenPermissionIdReqVo
	VerificationReqVo          = user_server.VerificationReqVo

	Permissions interface {
		// 创建新权限
		CreatePermission(ctx context.Context, in *CreatePermissionReqVo, opts ...grpc.CallOption) (*PermissionInfoRespVo, error)
		// 获取权限信息
		GetPermission(ctx context.Context, in *PermissionIdReqVo, opts ...grpc.CallOption) (*PermissionInfoRespVo, error)
		// 从名称获取权限
		GetPermissionByName(ctx context.Context, in *PermissionNameReqVo, opts ...grpc.CallOption) (*PermissionInfoRespVo, error)
	}

	defaultPermissions struct {
		cli zrpc.Client
	}
)

func NewPermissions(cli zrpc.Client) Permissions {
	return &defaultPermissions{
		cli: cli,
	}
}

// 创建新权限
func (m *defaultPermissions) CreatePermission(ctx context.Context, in *CreatePermissionReqVo, opts ...grpc.CallOption) (*PermissionInfoRespVo, error) {
	client := user_server.NewPermissionsClient(m.cli.Conn())
	return client.CreatePermission(ctx, in, opts...)
}

// 获取权限信息
func (m *defaultPermissions) GetPermission(ctx context.Context, in *PermissionIdReqVo, opts ...grpc.CallOption) (*PermissionInfoRespVo, error) {
	client := user_server.NewPermissionsClient(m.cli.Conn())
	return client.GetPermission(ctx, in, opts...)
}

// 从名称获取权限
func (m *defaultPermissions) GetPermissionByName(ctx context.Context, in *PermissionNameReqVo, opts ...grpc.CallOption) (*PermissionInfoRespVo, error) {
	client := user_server.NewPermissionsClient(m.cli.Conn())
	return client.GetPermissionByName(ctx, in, opts...)
}
