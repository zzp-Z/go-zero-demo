// Code generated by goctl. DO NOT EDIT.
// Source: user_server.proto

package userroleserver

import (
	"context"

	"user_server/user_server"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateRoleReqVo    = user_server.CreateRoleReqVo
	CreateUserReqVo    = user_server.CreateUserReqVo
	Empty              = user_server.Empty
	JwtTokenRespVo     = user_server.JwtTokenRespVo
	RoleIdReqVo        = user_server.RoleIdReqVo
	RoleInfoListRespVo = user_server.RoleInfoListRespVo
	RoleInfoRespVo     = user_server.RoleInfoRespVo
	RoleUsersRespVo    = user_server.RoleUsersRespVo
	UpdateUserReqVo    = user_server.UpdateUserReqVo
	UserIdReqVo        = user_server.UserIdReqVo
	UserInfoRespVo     = user_server.UserInfoRespVo
	UserRoleReqVo      = user_server.UserRoleReqVo
	UserRoleRespVo     = user_server.UserRoleRespVo
	UserRolesRespVo    = user_server.UserRolesRespVo
	VerificationReqVo  = user_server.VerificationReqVo

	UserRoleServer interface {
		AssignRoleToUser(ctx context.Context, in *UserRoleReqVo, opts ...grpc.CallOption) (*UserRoleRespVo, error)
		RemoveRoleFromUser(ctx context.Context, in *UserRoleReqVo, opts ...grpc.CallOption) (*UserRoleRespVo, error)
		GetRolesByUser(ctx context.Context, in *UserIdReqVo, opts ...grpc.CallOption) (*UserRolesRespVo, error)
		GetUsersByRole(ctx context.Context, in *RoleIdReqVo, opts ...grpc.CallOption) (*RoleUsersRespVo, error)
	}

	defaultUserRoleServer struct {
		cli zrpc.Client
	}
)

func NewUserRoleServer(cli zrpc.Client) UserRoleServer {
	return &defaultUserRoleServer{
		cli: cli,
	}
}

func (m *defaultUserRoleServer) AssignRoleToUser(ctx context.Context, in *UserRoleReqVo, opts ...grpc.CallOption) (*UserRoleRespVo, error) {
	client := user_server.NewUserRoleServerClient(m.cli.Conn())
	return client.AssignRoleToUser(ctx, in, opts...)
}

func (m *defaultUserRoleServer) RemoveRoleFromUser(ctx context.Context, in *UserRoleReqVo, opts ...grpc.CallOption) (*UserRoleRespVo, error) {
	client := user_server.NewUserRoleServerClient(m.cli.Conn())
	return client.RemoveRoleFromUser(ctx, in, opts...)
}

func (m *defaultUserRoleServer) GetRolesByUser(ctx context.Context, in *UserIdReqVo, opts ...grpc.CallOption) (*UserRolesRespVo, error) {
	client := user_server.NewUserRoleServerClient(m.cli.Conn())
	return client.GetRolesByUser(ctx, in, opts...)
}

func (m *defaultUserRoleServer) GetUsersByRole(ctx context.Context, in *RoleIdReqVo, opts ...grpc.CallOption) (*RoleUsersRespVo, error) {
	client := user_server.NewUserRoleServerClient(m.cli.Conn())
	return client.GetUsersByRole(ctx, in, opts...)
}
