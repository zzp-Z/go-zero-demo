// Code generated by goctl. DO NOT EDIT.
// Source: user_server.proto

package roleserver

import (
	"context"

	"user_server/user_server"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateRoleReqVo    = user_server.CreateRoleReqVo
	CreateUserReqVo    = user_server.CreateUserReqVo
	Empty              = user_server.Empty
	JwtTokenRespVo     = user_server.JwtTokenRespVo
	RoleIdReqVo        = user_server.RoleIdReqVo
	RoleInfoListRespVo = user_server.RoleInfoListRespVo
	RoleInfoRespVo     = user_server.RoleInfoRespVo
	RoleUsersRespVo    = user_server.RoleUsersRespVo
	UpdateUserReqVo    = user_server.UpdateUserReqVo
	UserIdReqVo        = user_server.UserIdReqVo
	UserInfoRespVo     = user_server.UserInfoRespVo
	UserRoleReqVo      = user_server.UserRoleReqVo
	UserRoleRespVo     = user_server.UserRoleRespVo
	UserRolesRespVo    = user_server.UserRolesRespVo
	VerificationReqVo  = user_server.VerificationReqVo

	RoleServer interface {
		CreateRole(ctx context.Context, in *CreateRoleReqVo, opts ...grpc.CallOption) (*RoleInfoRespVo, error)
		GetRole(ctx context.Context, in *RoleIdReqVo, opts ...grpc.CallOption) (*RoleInfoRespVo, error)
		DeleteRole(ctx context.Context, in *RoleIdReqVo, opts ...grpc.CallOption) (*RoleInfoRespVo, error)
		GetRoleList(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*RoleInfoListRespVo, error)
	}

	defaultRoleServer struct {
		cli zrpc.Client
	}
)

func NewRoleServer(cli zrpc.Client) RoleServer {
	return &defaultRoleServer{
		cli: cli,
	}
}

func (m *defaultRoleServer) CreateRole(ctx context.Context, in *CreateRoleReqVo, opts ...grpc.CallOption) (*RoleInfoRespVo, error) {
	client := user_server.NewRoleServerClient(m.cli.Conn())
	return client.CreateRole(ctx, in, opts...)
}

func (m *defaultRoleServer) GetRole(ctx context.Context, in *RoleIdReqVo, opts ...grpc.CallOption) (*RoleInfoRespVo, error) {
	client := user_server.NewRoleServerClient(m.cli.Conn())
	return client.GetRole(ctx, in, opts...)
}

func (m *defaultRoleServer) DeleteRole(ctx context.Context, in *RoleIdReqVo, opts ...grpc.CallOption) (*RoleInfoRespVo, error) {
	client := user_server.NewRoleServerClient(m.cli.Conn())
	return client.DeleteRole(ctx, in, opts...)
}

func (m *defaultRoleServer) GetRoleList(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*RoleInfoListRespVo, error) {
	client := user_server.NewRoleServerClient(m.cli.Conn())
	return client.GetRoleList(ctx, in, opts...)
}
